name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  MAKEFLAGS:  "-j2"

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Configure CMake
      run: |
         if [ "$RUNNER_OS" == "Windows" ]; then
           cmake -S "${{github.workspace}}" -B "${{github.workspace}}/build" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBINDINGS=ON -T "ClangCl"
         else
           cmake -S "${{github.workspace}}" -B "${{github.workspace}}/build" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBINDINGS=ON
         fi  
        
    - name: Build
      run: cmake --build "${{github.workspace}}/build" --config $BUILD_TYPE

  test:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Configure CMake
      run: |
         if [ "$RUNNER_OS" == "Windows" ]; then
           cmake -S "${{github.workspace}}" -B "${{github.workspace}}/build" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_QCEC_TESTS=ON -T "ClangCl"
         else
           cmake -S "${{github.workspace}}" -B "${{github.workspace}}/build" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_QCEC_TESTS=ON -DBINDINGS=ON
         fi  

    - name: Build
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          cmake --build "${{github.workspace}}/build" --config $BUILD_TYPE
        else
          cmake --build "${{github.workspace}}/build" --config $BUILD_TYPE --target qcec_test
        fi  

    - name: Test
      working-directory: ${{github.workspace}}/build/test
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          cd $BUILD_TYPE
          ./qcec_test.exe
        else
          ./qcec_test
        fi
    
  coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Configure CMake
        run:  cmake -S "${{github.workspace}}" -B "${{github.workspace}}/build" -DCMAKE_BUILD_TYPE=Debug -DBUILD_QCEC_TESTS=ON -DBINDINGS=ON -DCOVERAGE=1
      - name: Build
        run:  cmake --build "${{github.workspace}}/build" --config Debug --target qcec_test
      - name:              Test
        working-directory: ${{github.workspace}}/build/test
        run:               ./qcec_test
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.1.0
        with:
          gcov:        true
          gcov_ignore: "extern/**/*"
